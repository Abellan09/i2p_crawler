{"language": {"GOOGLE": "english", "NLTK": "english"}, "title": ["Pinsert Lightning Network Wallets"], "eepsite": "clfi6ogwn6v72h5ghq3bnbvekrvgknlum36jfsg4ascmdxehrjda.b32.i2p", "total_eepsite_pages": 3, "extracted_eepsites": ["lnd.i2p"], "main_page_tokenized_words": ["Pinsert", "Lightning", "Network", "Walletstable", "{", "color:", "#333;", "font-family:", "Helvetica,", "Arial,", "sans-serif;", "width:", "640px;", "border-collapse:", "collapse;", "border-spacing:", "0;", "}", "td,", "th", "{", "border:", "1px", "solid", "transparent;", "/*", "No", "more", "visible", "border", "*/", "height:", "30px;", "transition:", "all", "0.3s;", "/*", "Simple", "transition", "for", "hover", "effect", "*/", "}", "th", "{", "background:", "#DFDFDF;", "/*", "Darken", "header", "a", "bit", "*/", "font-weight:", "bold;", "padding:", "5px;", "}", "td", "{", "background:", "#FAFAFA;", "text-align:", "center;", "padding:", "10px;", "}", "/*", "Cells", "in", "even", "rows", "(2,4,6...)", "are", "one", "color", "*/", "tr:nth-child(even)", "td", "{", "background:", "#F1F1F1;", "}", "/*", "Cells", "in", "odd", "rows", "(1,3,5...)", "are", "another", "(excludes", "header", "cells)", "*/", "tr:nth-child(odd)", "td", "{", "background:", "#FEFEFE;", "}", "/*tr", "td:hover", "{", "background:", "#666;", "color:", "#FFF;", "}", "*/", "/*", "Hover", "cell", "effect!", "*/", ".center", "{", "/*margin:", "auto;*/", "margin-left:", "25%;", "width:", "30%;", "min-width:", "300px;", "padding:", "10px;", "}", "#view1,", "#view2,", "#view3,", "#view4,", "#view5,", "#view6,", "#view7,", "#view8,", "#view9,", "#view10,", "#view11,", "#view12,", "#view13,", "#view14,", "#left_menu", "{", "border-radius:", "15px", "15px", "15px", "15px;", "padding:", "20px;", "margin-bottom:", "10px;", "}", "#image", "{", "border-radius:", "30px", "30px", "30px", "30px;", "margin-bottom:", "10px;", "}", "input[type=text]{", "-webkit-border-radius:", "10px;", "-moz-border-radius:", "10px;", "border-radius:", "10px;", "height:", "30px;", "padding:", "5px;", "}", "input[type=password]{", "-webkit-border-radius:", "10px;", "-moz-border-radius:", "10px;", "border-radius:", "10px;", "height:", "30px;", "padding:", "5px;", "}", "textarea{", "-webkit-border-radius:", "10px;", "-moz-border-radius:", "10px;", "border-radius:", "10px;", "padding:", "5px;", "}", "button", "{", "background-color:", "lightgray;", "border:", "2px", "solid", "#f44336;", "color:", "black;", "padding:", "8px", "16px;", "text-align:", "center;", "text-decoration:", "none;", "display:", "inline-block;", "font-size:", "14px;", "margin:", "4px", "2px;", "-webkit-transition-duration:", "0.4s;", "/*", "Safari", "*/", "transition-duration:", "0.4s;", "cursor:", "pointer;", "-webkit-border-radius:", "10px;", "-moz-border-radius:", "10px;", "border-radius:", "10px;", "}", "button:hover", "{", "background-color:", "#f44336;", "color:", "white;", "}var", "wssSocket", "=", "{readyState:10000};", "var", "wssReconnectTimer;", "var", "wssFunctionTimer;", "var", "token", "='goldfish'", "var", "selectedrow", "=", "null;", "var", "eurbtc", "=", "1;", "var", "qrcode", "=", "null;", "var", "tabs", "=", "14", "var", "secureaddressesarray", "=", "[]", "const", "functions", "=", "[", "'WalletBalance',", "'ChannelBalance',", "'GetTransactions',", "'SendCoins',", "'SubscribeTransactions',", "'SendMany',", "'NewAddress',", "'NewWitnessAddress',", "'SignMessage',", "'VerifyMessage',", "'ConnectPeer',", "'DisconnectPeer',", "'ListPeers',", "'GetInfo',", "'PendingChannels',", "'ListChannels',", "'OpenChannel',", "'CloseChannel',", "'SendPayment',", "'AddInvoice',", "'ListInvoices',", "'LookupInvoice',", "'SubscribeInvoices',", "'DecodePayReq',", "'ListPayments',", "'DeleteAllPayments',", "'GetChanInfo',", "'GetNodeInfo',", "'QueryRoutes',", "'GetNetworkInfo',", "'FeeReport',", "'UpdateChannelPolicy'", "]", "function", "connectWss(){", "if(", "wssSocket.readyState>1", ")", "{", "//", "wssSocket", "=", "new", "WebSocket(\"wss://localhost:10011\")", "wssSocket", "=", "new", "WebSocket(\"ws://ryse7e4oa4sexh2scfqmrjpxulveco5r25n7k4z27hqjan4oregeqtad.onion/lnd\")", "wssSocket.onopen", "=", "function", "(event)", "{", "document.getElementById('divlogin').style.display", "=", "'block'", "sendwssSocket({},'GiveFreeAccount')", "}", "wssSocket.onerror", "=", "function", "(error)", "{", "console.log('wssonerror',", "error)", "clearInterval(wssReconnectTimer)", "clearInterval(wssFunctionTimer)", "document.getElementById('divlogin').style.display", "=", "'none'", "token", "='goldfish'", "wssReconnectTimer", "=", "setInterval(function(){connectWss()},", "5000", ")", "window.open('http://ryse7e4oa4sexh2scfqmrjpxulveco5r25n7k4z27hqjan4oregeqtad.onion',", "'_self')", "}", "wssSocket.onclose", "=", "function(event)", "{", "console.log('wssonclose',", "event)", "clearInterval(wssReconnectTimer)", "clearInterval(wssFunctionTimer)", "document.getElementById('divlogin').style.display", "=", "'none'", "token", "='goldfish'", "wssReconnectTimer", "=", "setInterval(function(){connectWss()},", "5000", ")", "window.open('http://ryse7e4oa4sexh2scfqmrjpxulveco5r25n7k4z27hqjan4oregeqtad.onion',", "'_self')", "}", "wssSocket.onmessage", "=", "function", "(event)", "{", "let", "msg", "=", "JSON.parse(event.data)", "switch(msg.type)", "{", "case", "\"ping\":", "sendwssSocket({},", "'pong');", "break;", "case", "\"func\":", "makeSomeFunction(msg.text);", "break;", "case", "\"token\":", "token", "=", "msg.text.token;", "wssFunctionTimer", "=", "setInterval(function(){intervalFunctions()},", "15000", ")", "document.getElementById('divlogin').style.display", "=", "'none';", "document.getElementById('loginname').innerHTML", "=", "\"<b>\"+document.getElementById('login').value+\"</b>\"", "if(document.getElementById('pass').value==='password')", "{", "document.getElementById('passname').innerHTML", "=", "'Your", "current", "password", "is", "<b>'", "+", "document.getElementById('pass').value", "+\"</b>.\"", "document.getElementById('oldpass').value", "=", "'password'", "}", "//document.getElementById('pass').value", "=", "''", "ListInvoices();", "GetInfo();", "ListPeers();", "ListChannels();", "PendingChannels();", "for(i=1;", "i<=tabs;", "i++){", "document.getElementById('view'+i).style.display", "=", "'block'", "}", "document.getElementById('main').style.display", "=", "'block'", "if(", "document.getElementById('pass').value==='password'", ")", "ShowSettings();", "else", "ShowPeers();", "document.getElementById('pass').value", "=", "''", "//", "feereport", "change", "lazy", "FeeReport()", "qrcode", "=", "new", "QRCode(\"qrcode\",", "{", "text:", "\"Enjoy", "the", "silence\",", "width:", "128,", "height:", "128,", "colorDark", ":", "\"#000000\",", "colorLight", ":", "\"#ffffff\",", "correctLevel", ":", "QRCode.CorrectLevel.H", "})", "break;", "}", "}", "}", "}", "//", "Send", "message", "to", "websocket", "function", "sendwssSocket(text,", "typek)", "{", "//", "Construct", "a", "msg", "object", "containing", "the", "data", "the", "server", "needs", "to", "process", "the", "message", "from", "the", "chat", "client.", "console.log(typek)", "if(wssSocket.readyState!==1)", "return;", "let", "msg", "=", "{", "type:", "typek,", "text:", "text,", "date:", "Date.now(),", "token:token", "};", "//", "Send", "the", "msg", "object", "as", "a", "JSON-formatted", "string.", "wssSocket.send(JSON.stringify(msg));", "}", "//", "Main", "function", "for", "take", "answers", "from", "run", "function", "on", "lnd", "function", "makeSomeFunction(odp){", "switch(odp.func){", "case", "'END':", "window.open('http://ryse7e4oa4sexh2scfqmrjpxulveco5r25n7k4z27hqjan4oregeqtad.onion',", "'_self')", "break;", "case", "'EURBTC':", "console.log('EURBTC:", "',", "odp.resp)", "eurbtc", "=", "odp.resp", "document.getElementById('onebtc').innerHTML", "=", "euro(100000000)", "break;", "case", "'GetInfo':", "console.log(odp)", "if(odp.resp)", "{", "document.getElementById('peers').innerHTML", "=", "odp.resp.num_peers", "document.getElementById('channels').innerHTML", "=", "odp.resp.num_active_channels", "+\"/\"", "+", "odp.resp.num_pending_channels", "document.getElementById('block_height').innerHTML", "=", "odp.resp.block_height", "document.getElementById('synced_to_chain').innerHTML", "=", "odp.resp.synced_to_chain", "document.getElementById('testnet').innerHTML", "=", "odp.resp.testnet", "//", "document.getElementById('uri').innerHTML", "=", "odp.resp.uris[0]", "document.getElementById('coin').innerHTML", "=", "odp.resp.chains[0].chain", "document.getElementById('account').innerHTML", "=", "odp.resp.identity_pubkey", "//odp.resp.identity_pubkey", "}", "break;", "case", "'AddInvoice':", "ListInvoices()", "break;", "case", "'ListInvoices':", "//console.log(odp.resp);", "WalletBalance(document.getElementById('witness_only').checked)", "ChannelBalance()", "document.getElementById('invoice_data').style.display", "=", "'none'", "let", "t1", "=", "document.getElementById(\"listinvoices\")", "let", "r1", "=", "t1.rows.length;", "for(let", "i", "=", "1;", "i<r1;", "i++){", "t1.deleteRow(1)", "}", "odp.resp.invoices.forEach(function(item){", "let", "row", "=", "document.getElementById('listinvoices').insertRow(1);", "//", "If", "settled", "we", "make", "row", "bold", "if(item.settled)", "row.style=\"font-weight:bold\";", "//", "if", "not", "settled", "and", "expired", "red", "color", "if(!item.settled", "&&", "((Number(item.creation_date)+Number(item.expiry))*1000", "<=", "new", "Date().getTime())", ")", "row.style='color:red;'", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "//cell2.style", "=", "\"text-align:right;", "border:", "1px", "solid", "black;padding:5px\"", "//", "row.setAttribute('onclick',", "'FillInvoice(event,\"'+item.payment_request+'\",", "'+item.expiry+',", "'+item.creation_date+',", "'+item.cltv_expiry+',", "'+item.settled+',", "\"'+item.memo+'\",'+item.value+'", ")')", "/*", "cell1.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell3.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell4.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"*/", "//let", "item2", "=", "document.createElement(\"div\")", "cell1.style=\"max-width:220px;", "overflow:hidden\"", "if(item.nazwa)", "{cell1.innerHTML=", "item.nazwa", "+\"", "-", "\"+item.ilosc}", "else", "{", "cell1.innerHTML=", "item.memo", "}", "cell2.innerHTML=", "euro(item.value)", "cell3.innerHTML", "=", "'<button", "onclick=\"FillInvoice(event,\\''+item.payment_request+'\\',", "'+item.expiry+',", "'+item.creation_date+',", "'+item.cltv_expiry+',", "'+item.settled+',", "\\''+item.memo+'\\','+item.value+',", "'+item.settle_date+'", ")\"", ">'+new", "Date(Number(item.creation_date)*1000).toLocaleString()+'</button>'", "cell3.style.width=\"100px\"", "if(item.settle_date>0)", "cell4.innerHTML", "=", "new", "Date(Number(item.settle_date)*1000).toLocaleString()", "})", "break;", "case", "'WalletBalance':", "document.getElementById('wallet_balance').innerHTML", "=", "euro(odp.resp.total_balance)+\"", "/", "\"+euro(odp.resp.confirmed_balance)", "+", "\"", "/", "\"+euro(odp.resp.unconfirmed_balance)", "break;", "case", "'ChannelBalance':", "document.getElementById('channel_balance').innerHTML", "=", "euro(odp.resp.balance)", "break;", "case", "'ConnectPeer':", "ListPeers()", "break;", "case", "'ListPeers':", "let", "t2", "=", "document.getElementById(\"listpeers\")", "let", "r2", "=", "t2.rows.length;", "for(let", "i", "=", "1;", "i<r2;", "i++){", "t2.deleteRow(1)", "}", "odp.resp.peers.forEach(function(item){", "let", "row", "=", "document.getElementById('listpeers').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "let", "cell6", "=", "row.insertCell(5)", "let", "cell7", "=", "row.insertCell(6)", "let", "cell8", "=", "row.insertCell(7)", "let", "cell9", "=", "row.insertCell(8)", "/*", "cell1.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell2.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell3.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"*/", "cell5.style", "=", "\"font-weight:bold;", "color:red\"", "cell4.style", "=", "\"font-weight:bold;", "color:green\"", "/*", "cell6.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell7.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell8.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell9.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"*/", "cell1.innerHTML=", "item.address", "cell2.innerHTML=", "item.bytes_sent", "cell3.innerHTML", "=", "item.bytes_recv", "cell5.innerHTML", "=", "euro(item.sat_sent)", "cell4.innerHTML", "=", "euro(item.sat_recv)", "cell6.innerHTML", "=", "item.inbound", "cell7.innerHTML", "=", "item.ping_time", "cell8.innerHTML", "=", "'<a", "href=\"javascript:void(0)\"", "class=\"'+item.pub_key+'\"", "onclick=\"PutPublic(\\''+item.pub_key+'\\')\">'+item.pub_key.substring(0,10)+\"...\"+'</a>'", "checkPubKey(item.pub_key)", "cell9.innerHTML", "=", "\"<button", "onclick='DisconnectPeer(\\\"\"+item.pub_key+\"\\\")'>Disconnect</button>\"", "})", "break;", "case", "'PendingChannels':", "console.log('", "Pending", "Channels:',", "odp.resp)", "let", "t3", "=", "document.getElementById(\"pending_open_channels\")", "let", "r3", "=", "t3.rows.length;", "for(let", "i", "=", "1;", "i<r3;", "i++){", "t3.deleteRow(1)", "}", "//console.log('pendingchannels',", "odp.resp)", "if(odp.resp.pending_open_channels.length>0)", "document.getElementById(\"pending_open_channels_div\").style.display=\"block\";", "else", "document.getElementById(\"pending_open_channels_div\").style.display='none';", "t3", "=", "document.getElementById(\"pending_closing_channels\")", "r3", "=", "t3.rows.length;", "for(let", "i", "=", "1;", "i<r3;", "i++){", "t3.deleteRow(1)", "}", "if(odp.resp.pending_closing_channels.length>0)", "document.getElementById(\"pending_closing_channels_div\").style.display=\"block\";", "else", "document.getElementById(\"pending_closing_channels_div\").style.display='none';", "t3", "=", "document.getElementById(\"pending_force_closing_channels\")", "r3", "=", "t3.rows.length;", "for(let", "i", "=", "1;", "i<r3;", "i++){", "t3.deleteRow(1)", "}", "if(odp.resp.pending_force_closing_channels.length>0)", "document.getElementById(\"pending_force_closing_channels_div\").style.display=\"block\";", "else", "document.getElementById(\"pending_force_closing_channels_div\").style.display='none';", "odp.resp.pending_open_channels.forEach(function(item){", "let", "row", "=", "document.getElementById('pending_open_channels').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "let", "cell6", "=", "row.insertCell(5)", "let", "cell7", "=", "row.insertCell(6)", "let", "cell8", "=", "row.insertCell(7)", "let", "cell9", "=", "row.insertCell(8)", "let", "cell10", "=", "row.insertCell(9)", "cell3.style", "=", "\"font-weight:bold;", "color:green\"", "cell4.style", "=", "\"font-weight:bold;", "color:red\"", "cell1.innerHTML=", "euro(item.channel.capacity)", "let", "split", "=", "item.channel.channel_point.split(':')", "cell2.innerHTML=", "'<a", "href=\"javascript:void(0)\"", "onclick=\"ShowChannelPoint(\\''+split[0]+'\\')\">'+split[0].substring(0,10)+\"...:\"+split[1]+'</a>'", "cell3.innerHTML", "=", "euro(item.channel.local_balance)", "cell4.innerHTML", "=", "euro(item.channel.remote_balance)", "cell5.innerHTML", "=", "'<a", "href=\"javascript:void(0)\"", "class=\"'+item.channel.remote_node_pub+'\"", "onclick=\"PutPublic(\\''+item.channel.remote_node_pub+'\\')\">'+item.channel.remote_node_pub.substring(0,10)+\"...\"+'</a>'", "checkPubKey(item.channel.remote_node_pub)", "cell6.innerHTML", "=", "item.commit_fee", "cell7.innerHTML", "=", "item.commit_weight", "cell8.innerHTML", "=", "item.confirmation_height", "cell9.innerHTML", "=", "item.fee_per_kw", "cell10.innerHTML", "=", "odp.resp.total_limbo_balance", "})", "odp.resp.pending_closing_channels.forEach(function(item){", "let", "row", "=", "document.getElementById('pending_closing_channels').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "let", "cell6", "=", "row.insertCell(5)", "cell3.style", "=", "\"font-weight:bold;", "color:green\"", "cell4.style", "=", "\"font-weight:bold;", "color:red\"", "cell1.innerHTML=", "euro(item.channel.capacity)", "let", "split", "=", "item.channel.channel_point.split(':')", "cell2.innerHTML=", "'<a", "href=\"javascript:void(0)\"", "onclick=\"ShowChannelPoint(\\''+split[0]+'\\')\">'+split[0].substring(0,10)+\"...:\"+split[1]+'</a>'", "cell3.innerHTML", "=", "euro(item.channel.local_balance)", "cell4.innerHTML", "=", "euro(item.channel.remote_balance)", "cell5.innerHTML", "=", "'<a", "href=\"javascript:void(0)\"", "class=\"'+item.channel.remote_node_pub+'\"", "onclick=\"PutPublic(\\''+item.channel.remote_node_pub+'\\')\">'+item.channel.remote_node_pub.substring(0,10)+\"...\"+'</a>'", "checkPubKey(item.channel.remote_node_pub)", "cell6.innerHTML=", "'<a", "href=\"javascript:void(0)\"", "onclick=\"ShowChannelPoint(\\''+item.closing_txid+'\\')\">'+item.closing_txid.substring(0,10)+\"...</a>\"", "})", "odp.resp.pending_force_closing_channels.forEach(function(item){", "let", "row", "=", "document.getElementById('pending_force_closing_channels').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "let", "cell6", "=", "row.insertCell(5)", "cell3.style", "=", "\"font-weight:bold;", "color:green\"", "cell4.style", "=", "\"font-weight:bold;", "color:red\"", "cell1.innerHTML=", "euro(item.channel.capacity)", "let", "split", "=", "item.channel.channel_point.split(':')", "cell2.innerHTML=", "'<a", "href=\"javascript:void(0)\"", "onclick=\"ShowChannelPoint(\\''+split[0]+'\\')\">'+split[0].substring(0,10)+\"...:\"+split[1]+'</a>'", "cell3.innerHTML", "=", "euro(item.channel.local_balance)", "cell4.innerHTML", "=", "euro(item.channel.remote_balance)", "cell5.innerHTML", "=", "'<a", "href=\"javascript:void(0)\"", "class=\"'+item.channel.remote_node_pub+'\"", "onclick=\"PutPublic(\\''+item.channel.remote_node_pub+'\\')\">'+item.channel.remote_node_pub.substring(0,10)+\"...\"+'</a>'", "checkPubKey(item.channel.remote_node_pub)", "cell6.innerHTML=", "'<a", "href=\"javascript:void(0)\"", "onclick=\"ShowChannelPoint(\\''+item.closing_txid+'\\')\">'+item.closing_txid.substring(0,10)+\"...</a>\"", "})", "break;", "case", "'ListChannels':", "let", "t4", "=", "document.getElementById(\"listchannels\")", "let", "r4", "=", "t4.rows.length;", "for(let", "i", "=", "1;", "i<r4;", "i++){", "t4.deleteRow(1)", "}", "odp.resp.channels.forEach(function(item){", "let", "row", "=", "document.getElementById('listchannels').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "let", "cell6", "=", "row.insertCell(5)", "let", "cell7", "=", "row.insertCell(6)", "let", "cell8", "=", "row.insertCell(7)", "let", "cell9", "=", "row.insertCell(8)", "let", "cell10", "=", "row.insertCell(9)", "let", "cell11", "=", "row.insertCell(10)", "let", "cell12", "=", "row.insertCell(11)", "let", "cell13", "=", "row.insertCell(12)", "let", "cell14", "=", "row.insertCell(13)", "let", "cell15", "=", "row.insertCell(14)", "let", "cell16", "=", "row.insertCell(15)", "let", "cell17", "=", "row.insertCell(16)", "cell7.style", "=", "\"font-weight:bold;", "color:red\"", "cell6.style", "=", "\"font-weight:bold;", "color:green\"", "cell1.innerHTML=", "item.active", "cell2.innerHTML=", "'<a", "href=\"javascript:void(0)\"", "class=\"'+item.remote_pubkey+'\"", "onclick=\"PutPublic(\\''+item.remote_pubkey+'\\')\">'+item.remote_pubkey.substring(0,10)+\"...\"+'</a>'", "checkPubKey(item.remote_pubkey)", "let", "split", "=", "item.channel_point.split(':')", "cell3.innerHTML", "=", "'<a", "href=\"javascript:void(0)\"", "onclick=\"ShowChannelPoint(\\''+split[0]+'\\')\">'+split[0].substring(0,10)+\"...:\"+split[1]+'</a>'", "cell4.innerHTML", "=", "item.chan_id", "cell5.innerHTML", "=", "euro(item.capacity)", "cell7.innerHTML", "=", "euro(item.remote_balance)", "cell6.innerHTML", "=", "euro(item.local_balance)", "cell8.innerHTML", "=", "item.commit_fee", "cell9.innerHTML", "=", "item.commit_weight", "cell10.innerHTML", "=", "item.fee_per_kw", "cell11.innerHTML", "=", "item.unsettled_balance", "cell12.innerHTML", "=", "item.total_satoshis_sent", "cell13.innerHTML", "=", "item.total_satoshis_received", "cell14.innerHTML", "=", "item.num_updates", "cell15.innerHTML", "=", "item.pending_htlcs", "//", "console.log('htlcs:", "',", "item.pending_htlcs)", "cell16.innerHTML", "=", "\"<button", "onclick='CloseChannel(\\\"\"+item.channel_point+\"\\\",", "false)'>Close</button>\"", "cell17.innerHTML", "=", "\"<button", "onclick='CloseChannel(\\\"\"+item.channel_point+\"\\\",", "true)'>Force", "Close</button>\"", "})", "break;", "case", "'CloseChannel':", "console.log('close", "channel:", "',odp.resp)", "ListChannels()", "break;", "case", "'GetTransactions':", "let", "t5", "=", "document.getElementById(\"listtransactions\")", "let", "r5", "=", "t5.rows.length;", "for(let", "i", "=", "1;", "i<r5;", "i++){", "t5.deleteRow(1)", "}", "odp.resp.transactions.forEach(function(item){", "let", "row", "=", "document.getElementById('listtransactions').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "let", "cell6", "=", "row.insertCell(5)", "let", "cell7", "=", "row.insertCell(6)", "if(item.amount<0)", "cell2.style.color='red';", "else", "cell2.style.color='green'", ";", "cell1.innerHTML=", "'<a", "href=\"https://blockchain.info/tx/'+item.tx_hash+'\"", "target=\"_blank\">'+item.tx_hash+'</a>'", "cell2.innerHTML=", "euro(item.amount)", "cell3.innerHTML", "=", "item.num_confirmations", "cell4.innerHTML", "=", "item.block_hash", "cell5.innerHTML", "=", "item.block_height", "cell6.innerHTML", "=", "new", "Date(Number(item.time_stamp)*1000).toLocaleString()", "cell7.innerHTML", "=", "item.total_fees", "})", "break;", "case", "'DecodePayReq':", "if(!odp.resp)", "return;", "console.log('DecodePayReq:", "',odp.resp)", "document.getElementById('pay_req_destination').innerHTML", "=", "odp.resp.destination", "document.getElementById('pay_req_alias').setAttribute('class',", "odp.resp.destination)", "checkPubKey(odp.resp.destination)", "document.getElementById('pay_req_memo').innerHTML", "=", "odp.resp.description", "document.getElementById('pay_req_value').innerHTML", "=", "odp.resp.num_satoshis", "document.getElementById('pay_req_value_euro').innerHTML", "=", "euro(odp.resp.num_satoshis)", "document.getElementById('pay_req_date').innerHTML", "=", "new", "Date(Number(odp.resp.timestamp)*1000).toLocaleString()", "document.getElementById('pay_req_expiry').innerHTML", "=", "new", "Date((Number(odp.resp.timestamp)+Number(odp.resp.expiry))*1000).toLocaleString()", "document.getElementById('pay_req_cltv_expiry').innerHTML", "=", "odp.resp.cltv_expiry", "if(", "(Number(odp.resp.timestamp)+Number(odp.resp.expiry))*1000<=(new", "Date().getTime())", ")", "{", "document.getElementById('pay_req_expiry').style.color", "=", "'red';", "//", "document.getElementById('payment_button').disabled", "=", "true;", "//", "document.getElementById('query_routes_button').style.display", "=", "'none';//disabled", "=", "true;", "document.getElementById('open_channel_from_payment_request_button').style.display='none';//disabled", "=", "true;", "}", "else", "{", "document.getElementById('pay_req_expiry').style.color", "=", "'green';", "//", "document.getElementById('payment_button').disabled", "=", "false;", "//", "document.getElementById('query_routes_button').style.display='inline-block';//disabled", "=", "false;", "document.getElementById('open_channel_from_payment_request_button').style.display", "=", "'none';//disabled", "=", "true;", "}", "document.getElementById('decode_payment_view').style.display", "=", "'block'", "if((Number(odp.resp.timestamp)+Number(odp.resp.expiry))*1000>(new", "Date().getTime())", ")", "QueryRoutes()", "break;", "case", "'SendPayment':", "console.log('", "SendPayment", "odp',", "odp.resp)", "console.log('", "SendPayment", "err',", "odp.err)", "if(odp.resp.payment_error)", "alert(odp.resp.payment_error)", "document.getElementById('decode_payment_view').style.display", "=", "'none'", "break;", "case", "'QueryRoutes':", "console.log(odp)", "if(odp.err){", "console.log('Query", "error:", "',", "odp.err);", "document.getElementById('query_routes_error').value", "=", "odp.err.details", "}", "else", "{", "console.log('Query", "routes:", "',odp.resp);", "document.getElementById('query_routes_error').value", "=", "'No", "errors'", "}", "if(!odp.err", "&&", "odp.resp.routes.length>=0", ")", "{", "let", "fee", "=", "0;", "let", "total_time_lock", "=", "0", "//for(let", "i=0;", "i<odp.resp.routes.length;", "i++){", "if(odp.resp.routes.length>0){", "fee", "=", "fee", "+", "odp.resp.routes[0].total_fees", "total_time_lock", "=", "total_time_lock", "+", "odp.resp.routes[0].total_time_lock", "}", "//}", "document.getElementById('payment_button').innerHTML", "=", "'SEND", "PAYMENT", "-", "fee:", "'+", "euro(fee)", "document.getElementById('query_routes_error').value", "=", "document.getElementById('query_routes_error').value", "+", "'", "Total", "time", "lock", "CLTV:", "'", "+total_time_lock", "document.getElementById('payment_button').style.display=\"inline-block\";", "}", "else", "{", "document.getElementById('payment_button').style.display", "=", "\"none\"", "//disabled", "=", "true;", "document.getElementById('open_channel_from_payment_request_button').style.display='inline-block';", "//disabled", "=", "false;", "}", "break;", "case", "'OpenChannel':", "if(odp.err)", "alert(odp.err.details);", "else", "{", "console.log('Open", "channel:", "',odp.resp);", "ListChannels()", "}", "break;", "case", "'ListPayments':", "console.log('ListPayments:", "',odp.resp);", "let", "t6", "=", "document.getElementById(\"listpayments\")", "let", "r6", "=", "t6.rows.length;", "for(let", "i", "=", "1;", "i<r6;", "i++){", "t6.deleteRow(1)", "}", "odp.resp.payments.forEach(function(item){", "let", "row", "=", "document.getElementById('listpayments').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "let", "cell4", "=", "row.insertCell(3)", "let", "cell5", "=", "row.insertCell(4)", "/*", "cell1.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell2.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell3.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell4.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell4.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"", "cell5.style", "=", "\"border:", "1px", "solid", "black;padding:5px\"*/", "cell2.style.color", "=", "\"red\"", "cell1.innerHTML=", "item.payment_hash", "cell2.innerHTML=", "euro(item.value)", "cell3.innerHTML", "=", "new", "Date(Number(item.creation_date)*1000).toLocaleString()", "let", "path", "=", "\"\"", "item.path.forEach(function(item){", "path", "=", "path+'<div", "class=\"'+item+'\">'+item+'</div>'", "})", "cell4.innerHTML", "=", "path", "item.path.forEach(function(item){", "checkPubKey(item)", "})", "cell5.innerHTML", "=", "item.fee", "})", "break;", "case", "'SignMessage':", "document.getElementById('signature').value", "=", "odp.resp.signature", "break;", "case", "'VerifyMessage':", "if(odp.resp.valid)", "document.getElementById('valid').innerHTML", "=", "'Message", "is", "valid", "from", "node", "';", "else", "document.getElementById('valid').innerHTML", "=", "'Message", "is", "not", "valid", "!!!", "'", ";", "document.getElementById('messages_pubkey').innerHTML", "=", "odp.resp.pubkey", "break;", "case", "'NewLogin':", "if(odp.resp)", "{", "document.getElementById('new_login').style.color='black'", "}", "else", "{", "document.getElementById('new_login').style.color='red'", "}", "break;", "case", "'NewLoginPassword':", "if(odp.resp)", "{", "document.getElementById('new_retype_password').style.color='black'", "}", "else", "{", "document.getElementById('new_retype_password').style.color='red'", "}", "break;", "case", "'CreateNewAccount':", "if(odp.resp)", "{", "document.getElementById('create_new_account_info').style.color='black'", "document.getElementById('create_new_account_info').style.fontSize='smaller'", "document.getElementById('create_new_account_info').innerHTML", "=", "'Your", "account", "is", "creating.", "We", "synchronize", "it", "with", "blockchain.", "Making", "connections", "to", "others", "users", "and", "create", "the", "first", "payment", "channels.", "It", "take", "a", "moment.", "Please", "return", "after", "an", "hour.'", "}", "else", "{", "document.getElementById('create_new_account_info').style.color='red'", "document.getElementById('create_new_account_info').style.fontSize='smaller'", "document.getElementById('create_new_account_info').innerHTML", "=", "'Your", "account", "is", "not", "created.", "Please", "try", "again.'", "}", "break;", "case", "'FeeReport':", "console.log(odp.resp)", "document.getElementById('profits').innerHTML", "=", "odp.resp.day_fee_sum+\"\\xa0/\\xa0", "\"+odp.resp.month_fee_sum+\"\\xa0/\\xa0", "\"+odp.resp.week_fee_sum", "break;", "case", "'GetNodeInfo':", "if(!odp.resp)", "break;", "console.log(odp.resp)", "alias.forEach(function(item){", "if(item.pub_key===odp.resp.node.pub_key)", "{", "item.alias", "=", "odp.resp.node.alias", "item.active", "=", "true;", "}", "})", "let", "tochange", "=", "document.getElementsByClassName(odp.resp.node.pub_key)", "console.log(tochange)", "for", "(var", "i", "=", "0;", "i", "<", "tochange.length;", "i++)", "{", "tochange[i].innerHTML", "=", "odp.resp.node.alias;", "}", "//tochange", "=", "document.getElementsByClassName(odp.resp.node.pub_key)", "//console.log(tochange)", "//", "item.innerHTML", "=", "odp.resp.node.alias", "break;", "case", "'NewWitnessAddress':", "console.log(odp.resp)", "document.getElementById('newaddress').innerHTML", "=", "odp.resp.address", "qrcode.clear()", "qrcode.makeCode(odp.resp.address)", "document.getElementById('newaddress').style.display", "=", "'block'", "document.getElementById('qrcode').style.display", "=", "'block'", "break;", "case", "'CreateShopPoint':", "console.log(odp.resp)", "ListShopPoints()", "break;", "case", "'ListShopPoints':", "console.log('ListShopPoints',", "odp.resp)", "let", "t7", "=", "document.getElementById(\"shops\")", "let", "r7", "=", "t7.rows.length;", "for(let", "i", "=", "1;", "i<r7;", "i++){", "t7.deleteRow(1)", "}", "odp.resp.forEach(function(item){", "let", "row", "=", "document.getElementById('shops').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "cell1.innerHTML", "=", "item.name", "cell2.innerHTML", "=", "'<input", "id=\"'+item.key+'\"", "type=\"checkbox\"", "onchange=\"changeActiveShop(this)\">'", "if(item.active)", "document.getElementById(item.key).checked", "=", "true", "cell3.innerHTML", "=", "item.key", "})", "break;", "case", "'ChangeActiveShopPoint':", "ListShopPoints()", "break;", "case", "'CreateAPIPoint':", "console.log(odp.resp)", "ListAPIPoints()", "break;", "case", "'ListAPIPoints':", "console.log('ListAPIPoints',", "odp.resp)", "let", "t8", "=", "document.getElementById(\"apis\")", "let", "r8", "=", "t8.rows.length;", "for(let", "i", "=", "1;", "i<r8;", "i++){", "t8.deleteRow(1)", "}", "odp.resp.forEach(function(item){", "let", "row", "=", "document.getElementById('apis').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "let", "cell3", "=", "row.insertCell(2)", "cell1.innerHTML", "=", "'<button", "onclick=\"ListAPIFunctions(\\''+item.key+'\\')\">'+item.name+'</button>'", "cell2.innerHTML", "=", "'<input", "id=\"'+item.key+'\"", "type=\"checkbox\"", "onchange=\"changeActiveAPI(this)\">'", "if(item.active)", "document.getElementById(item.key).checked", "=", "true", "cell3.innerHTML", "=", "item.key", "})", "break;", "case", "'ListAPIFunctions':", "console.log('ListAPIFunctions',", "odp)", "let", "t9", "=", "document.getElementById(\"api_functions\")", "let", "r9", "=", "t9.rows.length;", "for(let", "i", "=", "1;", "i<r9;", "i++){", "t9.deleteRow(1)", "}", "functions.forEach(function(item){", "let", "row", "=", "document.getElementById('api_functions').insertRow(1);", "let", "cell1", "=", "row.insertCell(0)", "let", "cell2", "=", "row.insertCell(1)", "cell1.innerHTML", "=", "item", "cell2.innerHTML", "=", "'<input", "id=\"func_'+item+'\"", "type=\"checkbox\"", "onchange=\"changeActiveAPIFunction(this)\"", ">'", "if(odp.resp[0].functions[item])", "document.getElementById(\"func_\"+item).checked", "=", "true", "})", "break;", "case", "'ChangeActiveAPIPoint':", "ListAPIPoints()", "break;", "case", "'OpenOurShop':", "CheckOpenOurShop()", "break;", "case", "'CheckOpenOurShop':", "console.log(odp)", "document.getElementById('dealername').value", "=", "odp.resp;", "document.getElementById('dealername').disabled", "=", "true;", "document.getElementById('shopbefore').style.display='none'", "document.getElementById('shopafter').style.display='block'", "break;", "case", "'ChangePassword':", "console.log(odp)", "document.getElementById('buttonchangepass').innerHTML=odp.answer", "break;", "case", "'GiveSecureAddresses':", "console.log(odp)", "if(odp.secureaddresses.length>0)", "{", "document.getElementById('secureaddressesblock').style.display", "=", "'none'", "document.getElementById('secureaddresses').innerHTML", "=", "''", "for(let", "i=0;", "i<odp.secureaddresses.length;", "i++){", "let", "div", "=", "document.createElement('div')", "div.innerHTML", "=", "odp.secureaddresses[i]", "document.getElementById('secureaddresses').appendChild(div)", "}", "}", "break;", "case", "'CheckAddress':", "let", "jestaddress", "=", "false", "for(let", "i=0;i<secureaddressesarray.length;i++", "){", "if(secureaddressesarray[i]===odp.address)", "{", "jestaddress", "=", "true;", "}", "}", "if(!jestaddress)", "{", "secureaddressesarray.push(odp.address);", "document.getElementById('secureaddressesadded').innerHTML", "=", "document.getElementById('secureaddressesadded').innerHTML", "+", "odp.address", "+'<br>'", "}", "break;", "case", "'SaveAddSecureAddress':", "GiveSecureAddresses()", "break;", "case", "'GiveFreeAccount':", "console.log(odp)", "if(odp.resp)", "{", "document.getElementById('login').value", "=", "odp.nick", "document.getElementById('pass').value", "=", "'password'", "document.getElementById('create_new_account_info').innerHTML", "=", "'<b>", "Lightning", "Network", "<br>Wallets</b><br><br>'", "+", "\"Free", "account", "ready.<br>Click", "button<br>Let's", "test", "LND.\"", "}", "else", "{", "document.getElementById('login').value", "=", "''", "document.getElementById('pass').value", "=", "''", "document.getElementById('create_new_account_info').innerHTML", "=", "'<b>", "Lightning", "Network", "<br>New", "Bitcoin", "Power</b><br><br>'", "+", "\"Not", "free", "accounts", "ready.", "Return", "later.\"", "}", "break;", "}", "}", "connectWss()", "function", "intervalFunctions(){", "//", "console.log(document.getElementById('witness_only').checked)", "GetInfo()", "WalletBalance(document.getElementById('witness_only').checked)", "ChannelBalance()", "ListChannels()", "PendingChannels()", "//", "ListInvoices()", "ListPayments()", "}", "function", "LogOut(){", "window.open('http://ryse7e4oa4sexh2scfqmrjpxulveco5r25n7k4z27hqjan4oregeqtad.onion',", "'_self')", "}", "function", "ShowNewWitnessAddress(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view10').style.display", "=", "'block'", "document.getElementById('qrcode').style.display", "=", "\"none\"", "document.getElementById('newaddress').style.display", "=", "\"none\"", "}", "function", "ShowPeers(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view3').style.display", "=", "'block'", "}", "function", "ShowChannels(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view4').style.display", "=", "'block'", "}", "function", "ShowInvoices(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view5').style.display", "=", "'block'", "}", "function", "ShowPayment(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view6').style.display", "=", "'block'", "document.getElementById('view7').style.display", "=", "'block'", "}", "function", "ShowTransactions(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view8').style.display", "=", "'block'", "GetTransactions()", "}", "function", "ShowMessages(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view9').style.display", "=", "'block'", "}", "function", "ShowForYourShops(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view11').style.display", "=", "'block'", "ListShopPoints()", "CheckOpenOurShop()", "}", "function", "ShowWebSocketAPI(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "ListAPIPoints()", "document.getElementById('view12').style.display", "=", "'block'", "}", "function", "ShowSettings(){", "for(let", "i=3;", "i<=tabs-1;", "i++){", "document.getElementById('view'+i).style.display", "=", "'none'", "}", "document.getElementById('view13').style.display", "=", "'block'", "GiveSecureAddresses()", "}", "function", "GetInfo()", "{", "sendwssSocket({func:'GetInfo'},'func')", "}", "function", "Login(){", "sendwssSocket({login:document.getElementById('login').value,", "password:document.getElementById('pass').value},", "'login')", "//document.getElementById('pass').value", "=", "''", "}", "function", "NewWitnessAddress(){", "sendwssSocket({func:'NewWitnessAddress'", "},'func')", "}", "function", "NewLoginBlur(){", "console.log(document.getElementById('new_login').value)", "sendwssSocket({newlogin:document.getElementById('new_login').value", "},'newlogin')", "}", "function", "NewPasswordBlur(){", "console.log(document.getElementById('new_password').value)", "}", "function", "NewRetypePasswordBlur(){", "console.log(document.getElementById('new_retype_password').value)", "sendwssSocket({password:document.getElementById('new_password').value,", "retypepassword:", "document.getElementById('new_retype_password').value},'newloginpassword')", "}", "function", "CreateAccount(){", "console.log('create", "account')", "sendwssSocket({newlogin:document.getElementById('new_login').value,", "password:document.getElementById('new_password').value,", "retypepassword:", "document.getElementById('new_retype_password').value},'createnewaccount')", "}", "function", "SignMessage(){", "sendwssSocket({func:'SignMessage',", "message:document.getElementById('message').value", "},'func')", "}", "function", "VerifyMessage(){", "sendwssSocket({func:'VerifyMessage',", "message:document.getElementById('message').value,", "signature:document.getElementById('signature').value", "},'func')", "}", "function", "ListPayments(){", "sendwssSocket({func:'ListPayments'", "},'func')", "}", "function", "PendingChannels(){", "sendwssSocket({func:'PendingChannels'", "},'func')", "}", "function", "OpenChannel(){", "sendwssSocket({", "func:'OpenChannel',", "node_pubkey_string:", "document.getElementById('channel_node_pubkey_string').value,", "local_funding_amount:", "document.getElementById('local_funding_amount').value,", "push_sat:", "document.getElementById('push_sat').value", "},'func')", "}", "function", "PutPublic(keyek){", "document.getElementById('channel_node_pubkey_string').value", "=", "keyek", "document.getElementById('local_funding_amount').value", "=", "100000", "document.getElementById('push_sat').value", "=", "0", "//", "to", "make", "recalculation", "to", "euro", "let", "event", "=", "{", "target:", "document.getElementById('local_funding_amount')", "}", "KeyUp(event,", "'local_funding_amount')", "event", "=", "{", "target:", "document.getElementById('push_sat')", "}", "KeyUp(event,", "'push_sat')", "document.getElementById('channel_node_alias').innerHTML=''", "document.getElementById('channel_node_alias').setAttribute('class',", "keyek)", "checkPubKey(keyek)", "ShowChannels()", "}", "function", "SendPayment(){", "sendwssSocket({func:'SendPayment',", "payment_request:document.getElementById('pay_req').value", "},'func')", "}", "function", "DecodePayReq(){", "document.getElementById('decode_payment_view').style.display", "=", "'none'", "document.getElementById('pay_req_destination').innerHTML", "=", "''", "document.getElementById('pay_req_memo').innerHTML=\"\"", "document.getElementById('pay_req_value').innerHTML", "=", "''", "document.getElementById('pay_req_date').innerHTML", "=\"\"", "document.getElementById('pay_req_expiry').innerHTML", "=", "''", "document.getElementById('pay_req_cltv_expiry').innerHTML", "=''", "document.getElementById('query_routes_button').style.display='none';//disabled", "=", "true;", "document.getElementById('payment_button').style.display=\"none\"//disabled", "=", "true;", "document.getElementById('query_routes_error').value", "=", "''", "sendwssSocket({func:'DecodePayReq',", "pay_req:document.getElementById('pay_req').value", "},'func')", "}", "function", "QueryRoutes(){", "console.log('query", "route')", "console.log('pub_key',", "document.getElementById('pay_req_destination').innerHTML,", "'", "amt:',", "document.getElementById('pay_req_value').innerHTML)", "sendwssSocket({func:'QueryRoutes',", "pub_key:document.getElementById('pay_req_destination').innerHTML,", "amt:document.getElementById('pay_req_value').innerHTML", "},'func')", "}", "function", "GetTransactions()", "{", "sendwssSocket({func:'GetTransactions'", "},'func')", "}", "function", "CloseChannel(channel_point,", "force)", "{", "sendwssSocket({func:'CloseChannel',", "channel_point:channel_point,", "force:force", "},'func')", "}", "function", "ListChannels()", "{", "sendwssSocket({func:'ListChannels'},'func')", "}", "function", "ListPeers()", "{", "sendwssSocket({func:'ListPeers'},'func')", "}", "function", "ConnectPeer()", "{", "sendwssSocket({func:'ConnectPeer',", "addr:document.getElementById('peer_address_connect').value,", "perm:document.getElementById('perm').checked},'func')", "}", "function", "WalletBalance(witness_only)", "{", "sendwssSocket({func:'WalletBalance',", "witness_only:witness_only},'func')", "}", "function", "ChannelBalance()", "{", "sendwssSocket({func:'ChannelBalance'},'func')", "}", "function", "AddInvoice(){", "sendwssSocket({func:'AddInvoice',", "value:document.getElementById('value').value,", "memo:document.getElementById('memo').value", "},'func')", "}", "function", "ListInvoices(){", "sendwssSocket({func:'ListInvoices',", "pending_only:false},'func')", "}", "function", "FeeReport(){", "sendwssSocket({func:'FeeReport'},'func')", "}", "function", "OpenChannelFromPaymentRequest(){", "document.getElementById('channel_node_pubkey_string').value", "=", "document.getElementById('pay_req_destination').innerHTML", "document.getElementById('local_funding_amount').value", "=", "document.getElementById('pay_req_value').innerHTML", "document.getElementById('push_sat').value", "=", "'0'", "//document.getElementById(\"view4\").scrollIntoView()", "ShowChannels()", "//", "to", "make", "recalculation", "to", "euro", "let", "event", "=", "{", "target:", "document.getElementById('local_funding_amount')", "}", "KeyUp(event,", "'local_funding_amount')", "event", "=", "{", "target:", "document.getElementById('push_sat')", "}", "KeyUp(event,", "'push_sat')", "}", "//", "Fill", "invoice", "function", "from", "ListInvoices", "//", "change", "color", "selected", "row", "in", "List", "Invoices", "function", "FillInvoice(event,payment_request,", "expiry,", "creation_date,", "cltv_expiry,", "settled,", "memo,", "value,", "settle_date){", "//", "if(selectedrow)", "selectedrow.style.backgroundColor=\"lightblue\"", "//", "selectedrow", "=", "event.target.parentElement", "//", "selectedrow.style.backgroundColor=\"lightgray\"", "document.getElementById(\"payment_request\").value=payment_request", "document.getElementById(\"invoice_memo\").innerHTML=memo", "document.getElementById(\"invoice_value\").innerHTML=euro(value)", "document.getElementById(\"expiry\").innerHTML", "=", "new", "Date((creation_date+expiry)*1000).toLocaleString()", "if(!settled", "&&", "((Number(creation_date)+Number(expiry))*1000", "<=", "new", "Date().getTime())", ")", "document.getElementById(\"expiry\").style.color='red';", "else", "document.getElementById(\"expiry\").style.color='black';", "document.getElementById(\"cltv_expiry\").innerHTML", "=", "cltv_expiry", "document.getElementById('invoice_data').style.display", "=", "'inline-block'", "if(settle_date>0)", "document.getElementById('payment_request_settle_date').innerHTML", "=", "new", "Date(settle_date*1000).toLocaleString();", "else", "document.getElementById('payment_request_settle_date').innerHTML", "=", "'';", "}", "//", "copy", "to", "clipboard", "function", "copyToClipboard(element,", "innerHTML)", "{", "console.log(element,", "innerHTML)", "if(!innerHTML)", "{", "/*", "Get", "the", "text", "field", "*/", "let", "copyText", "=", "document.getElementById(element);", "/*", "Select", "the", "text", "field", "*/", "copyText.select();", "/*", "Copy", "the", "text", "inside", "the", "text", "field", "*/", "document.execCommand(\"Copy\");", "/*", "Alert", "the", "copied", "text", "*/", "alert(\"Copied", "the", "text:", "\"", "+", "copyText.value);", "}", "else", "{", "let", "temp", "=", "document.createElement(\"input\")", "temp.type", "=", "\"text\"", "temp.value", "=", "document.getElementById(element).innerHTML", "document.getElementById(element).innerHTML", "=", "''", "document.getElementById(element).append(temp)", "temp.select()", "document.execCommand('Copy')", "document.getElementById(element).innerHTML", "=", "temp.value", "alert(\"Copied", "the", "text:", "\"", "+", "temp.value)", "}", "}", "function", "ShowChannelPoint(transaction){", "window.open('https://blockchain.info/tx/'+transaction,", "'_blank')", "}", "var", "alias", "=[]", "function", "checkPubKey(pub_key){", "let", "exist", "=", "false;", "alias.forEach(function(item){", "if(item.pub_key===pub_key)", "{", "exist", "=", "true;", "if(item.active)", "{", "let", "tochange", "=", "document.getElementsByClassName(pub_key)", "for", "(var", "i", "=", "0;", "i", "<", "tochange.length;", "i++)", "{", "tochange[i].innerHTML", "=", "item.alias;", "}", "}", "}", "})", "if(!exist)", "{", "alias.push({pub_key:pub_key,", "active:", "false,", "alias:'not", "yet'})", "sendwssSocket({func:'GetNodeInfo',", "pub_key:pub_key},'func')", "}", "}", "function", "euro(satoshi){", "if(eurbtc===1)", "{", "return", "satoshi;", "}", "else", "{", "return", "(Number(satoshi)*0.00000001*Number(eurbtc)).toFixed(2)", "+", "String.fromCharCode(160)+'~EUR';", "}", "}", "function", "KeyUp(event,element){", "let", "place", "=", "document.getElementById(element+'_euro')", "if(!isNaN(event.target.value))", "{", "place.value", "=", "euro(event.target.value)", "}", "else", "{", "place.value", "=", "'Wrong", "value'", "}", "}", "function", "CreateShopPoint(){", "sendwssSocket({func:'CreateShopPoint',", "shop_name:document.getElementById('shop_name').value},'func')", "}", "function", "ListShopPoints(){", "sendwssSocket({func:'ListShopPoints'},'func')", "}", "function", "changeActiveShop(event){", "console.log(event)", "sendwssSocket({func:'ChangeActiveShopPoint',", "key:event.id,", "active:event.checked},'func')", "}", "function", "CreateAPIPoint(event){", "console.log(event)", "sendwssSocket({func:'CreateAPIPoint',", "api_name:document.getElementById('api_name').value},'func')", "}", "function", "ListAPIPoints(){", "sendwssSocket({func:'ListAPIPoints'},'func')", "}", "function", "ListAPIFunctions(){", "sendwssSocket({func:'ListAPIFunctions'},'func')", "}", "function", "changeActiveAPI(event){", "console.log(event)", "sendwssSocket({func:'ChangeActiveAPIPoint',", "key:event.id,", "active:event.checked},'func')", "}", "function", "changeActiveAPIFunction(event){", "console.log(event)", "let", "fun", "=", "event.id.substring(5,event.id.length)", "console.log(fun)", "sendwssSocket({func:'ChangeActiveAPIFunction',", "function:fun", ",", "active:event.checked},'func')", "}", "function", "OpenOurShop(){", "sendwssSocket({func:'OpenOurShop',", "dealername:document.getElementById('dealername').value},", "'func')", "}", "function", "CheckOpenOurShop(){", "sendwssSocket({func:'CheckOpenOurShop'},", "'func')", "}", "function", "ChangePassword(){", "document.getElementById('buttonchangepass').innerHTML", "=", "'Wait", "a", "moment'", "sendwssSocket({func:'ChangePassword',", "oldpass:document.getElementById('oldpass').value,", "changepass:document.getElementById('changepass').value,", "repeatchangepass:document.getElementById('repeatchangepass').value", "},", "'func')", "}", "function", "GiveSecureAddresses(){", "sendwssSocket({func:'GiveSecureAddresses'},", "'func')", "}", "function", "AddSecureAddress(){", "sendwssSocket({func:'CheckAddress',", "address:", "document.getElementById('secureaddress').value},", "'func')", "}", "function", "SaveAddSecureAddress(){", "console.log(secureaddressesarray)", "sendwssSocket({func:'SaveAddSecureAddress',", "secureaddressesarray:secureaddressesarray", "},", "'func')", "}Lightning", "NetworkNew", "Bitcoin", "PowerLoginPasswordLet's", "test", "LNDPlease", "test", "!Try", "send", "SMS", "around", "the", "worldCreate", "new", "lightning", "network", "accountLoginPasswordRetype", "PasswordCreateWhy", "are", "my", "cat's", "eyes", "orange?", "Is", "it", "bitcoin?", "Yes.", "Let", "me", "explain", "what", "my", "cat", "can", "do.", "He", "can", "perform", "super", "fast", "transactions", "around", "the", "world", "based", "on", "safety", "and", "bitcoin", "value.", "Kitten", "is", "young", "but", "has", "tiger", "claws.", "The", "kitten", "is", "currently", "playing", "on", "the", "main", "network", "so", "you", "look", "out", "about", "real", "bitcoin", "value.", "Let's", "see", "what", "we", "have", "here:peers-", "computers", "using", "Lightning", "Network", "software,channels-", "created", "payment", "channels", "with", "a", "certain", "capacity", "in", "bitcoins", "and", "possible", "transfer", "of", "value", "to", "another", "user,invoices-", "here", "you", "create", "your", "orders", "for", "payment,payment-", "and", "here", "you", "pay", "for", "received", "invoices,transaction-", "place", "where", "bitcoin", "connects", "with", "the", "power", "of", "our", "kitten,sign", "message-", "place", "of", "signing", "and", "verifying", "messages.More", "...LogoutNew", "BTC", "AddressPeersChannelsInvoicesPaymentTransactionsMessagesFor", "your", "shopsWebSocket", "APISettings100", "000", "000", "Satoshi", "is1", "BTC", "and", "1", "BTC", "is...We", "are", "all", "time", "atI2P", "linkYou", "need", "I2P", "fromgeti2p.netWallet", "Balance:..whitness", "onlyAll", "Channels", "Balance:..Your", "Profits:..Your", "Account:..Main", "Server", "URI:03fc5b91ce2d857f146fd9b986363374ffe04dc143d8bcd6d7664c8873c463cdfc@185.228.141.6:9735Connected", "Peers:..Payment", "Channels:..Block:..Sync:..Testnet:..Coin:..PeersConnect", "PeerPersistantlyRefresh", "ListAddressBytes", "sentBytes", "recvValue", "recvValue", "sentInboundPing", "timePublic", "keyDisconnectChannelsOpen", "ChannelCreating", "channels", "is", "an", "expensive", "operation", "because", "you", "will", "use", "a", "blockchain", "to", "create", "a", "coin", "transaction.", "If", "you", "received", "a", "payment", "request", "try", "decode", "in", "the", "payment", "panel.", "Decode", "wil", "check", "if", "you", "need", "a", "channel", "for", "the", "payment", "request.", "It", "is", "The", "Lightning", "Network", "true", "power.Refresh", "ListPending", "Open", "ChannelsCapacityChannel", "pointLocal", "balanceRemote", "balanceRemote", "node", "pubCommit", "feeCommit", "weightConfirmation", "heightFee", "per", "kwTotal", "limbo", "balancePending", "Closing", "ChannelsCapacityChannel", "pointLocal", "balanceRemote", "balanceRemote", "node", "pubClosing", "txidPending", "Force", "Closing", "ChannelsCapacityChannel", "pointLocal", "balanceRemote", "balanceRemote", "node", "pubClosing", "txidOpen", "ChannelsActiveRemote", "pubkeyChannel", "pointChannel", "idCapacityLocal", "balanceRemote", "balanceCommit", "feeCommit", "weightFee", "per", "kwUnsettled", "balanceTotal", "satoshis", "sentTotal", "satoshis", "recievedNo.", "updatesPending", "htlcsCLOSEFORCE", "CLOSEInvoicesAdd", "InvoiceMemoValueRefresh", "ListMemoValueCreation", "datePayment", "datePayment", "RequestCopyPayment", "MemoPayment", "ValueExpirySettled", "DateCLTV", "ExpiryPaymentPayment", "Request", "to", "DecodeDecodeDestination...MemoValueCreation", "DateExpiryCLTV", "ExpiryError", "info.QUERY", "ROUTESSEND", "PAYMENTOPEN", "CHANNELList", "of", "Payments:Refresh", "ListPayment", "hashValueCreation", "datePathFeeTransactions:Refresh", "ListTx", "hashAmountNum", "confirmationsBlock", "hashBlock", "heightTime", "stampTotal", "feesSign", "or", "verify", "messageSignature", "(", "will", "be", "generate", "or", "recieved", ")SIGNVERIFYYour", "new", "wittness", "address", "to", "send", "bitcoin", "to", "your", "wallet.Create", "new", "address", "in", "your", "wallet.For", "your", "shops.Create", "Shop", "PointRefresh", "ListYour", "shops", "listShop", "nameActiveKeyExample", "use.", "Your", "web", "server", "part.Example", "use.", "Your", "web", "server", "-", "html", "part.You", "are", "ready", "to", "use", "place", "to", "make", "selling", "on", "pinsert.Open", "your", "shopGo", "to", "our", "shopWebSocket", "API.Create", "API", "PointRefresh", "ListYour", "API", "listAPI", "nameActiveKeyYour", "API", "functionFunction", "nameActivePinsert/lnd", "TeamSettings.Your", "login", "isyou", "can", "change", "your", "password.Save", "the", "login", "and", "new", "password", "on", "the", "paper.", "We", "do", "not", "get", "access", "to", "the", "website", "after", "losing", "your", "password.OLD", "PasswordNew", "PasswordRepeat", "New", "PasswordChangeBitcoin", "security", "addressesWhen", "the", "system", "detects", "a", "threat,", "nuclear", "war", "or", "other", "dangers,", "the", "system", "will", "perform", "an", "automatic", "transfer", "to", "the", "given", "addresses.", "Then", "it", "will", "start", "closing", "payment", "channels", "and", "will", "transfer", "all", "funds", "to", "the", "given", "addresses", "again.", "You", "only", "enter", "bitcoin", "addresses", "once.It", "will", "not", "be", "possible", "to", "change", "them", "for", "security", "reasons.Add", "bitcoin", "addressSave", "add", "bitcoin", "addressesPinsert/lnd", "Team"], "size_main_page": {"IMAGES": 2, "LETTERS": 20163, "WORDS": 3435, "SCRIPTS": 2}}